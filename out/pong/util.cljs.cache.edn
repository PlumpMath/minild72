{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pong.util, :imports nil, :requires nil, :uses nil, :defs {rect-intersects? {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/util.cljs", :line 4, :column 7, :end-line 4, :end-column 23, :arglists (quote ([a b]))}, :name pong.util/rect-intersects?, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/util.cljs", :end-column 23, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, clamp {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/util.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([x min max]))}, :name pong.util/clamp, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/util.cljs", :end-column 12, :method-params ([x min max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x min max]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :else :default :w :h :x}, :order [:x :y :w :h :else :default]}, :doc nil}