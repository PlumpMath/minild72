{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pong.core, :imports nil, :requires {pb pong.bot, ps pong.setup, pi pong.input, q quil.core, pong.input pong.input, pong.fairydust pong.fairydust, pf pong.fairydust, pp pong.physics, m quil.middleware, pong.bot pong.bot, pong.physics pong.physics, quil.core quil.core, quil.middleware quil.middleware, pong.setup pong.setup}, :uses nil, :defs {draw-rect {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/core.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([r]))}, :name pong.core/draw-rect, :variadic false, :file "src/pong/core.cljs", :end-column 16, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, draw-str {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/core.cljs", :line 13, :column 7, :end-line 13, :end-column 15, :arglists (quote ([s point]))}, :name pong.core/draw-str, :variadic false, :file "src/pong/core.cljs", :end-column 15, :method-params ([s point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s point]))}, next-ball {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/core.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([state ball [dx dy]]))}, :name pong.core/next-ball, :variadic false, :file "src/pong/core.cljs", :end-column 16, :method-params ([state ball p__16587]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state ball [dx dy]]))}, update-fn {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/core.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([state]))}, :name pong.core/update-fn, :variadic false, :file "src/pong/core.cljs", :end-column 16, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/core.cljs", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([state]))}, :name pong.core/draw, :variadic false, :file "src/pong/core.cljs", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, pong {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/core.cljs", :line 47, :column 14, :end-line 47, :end-column 18, :export true, :arglists (quote ([]))}, :name pong.core/pong, :variadic false, :file "src/pong/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :score-pos :ball :fn :bot :w :mouse-moved :update :hits :size :setup :middleware :host :paddle :h :host-id :player :no-start :x :draw :ball-dir}, :order [:x :y :w :h :hits :player :ball :ball-dir :paddle :bot :score-pos :host :mouse-moved :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}