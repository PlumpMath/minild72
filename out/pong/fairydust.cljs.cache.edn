{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pong.fairydust, :imports nil, :requires {q quil.core, quil.core quil.core, ps pong.setup, pong.setup pong.setup}, :uses nil, :defs {add-wall {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 53, :column 7, :end-line 53, :end-column 15, :arglists (quote ([walls]))}, :name pong.fairydust/add-wall, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 15, :method-params ([walls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([walls]))}, wallx {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 49, :column 7, :end-line 49, :end-column 12, :arglists (quote ([]))}, :name pong.fairydust/wallx, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, paddles-height {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 7, :column 7, :end-line 7, :end-column 21, :arglists (quote ([state]))}, :name pong.fairydust/paddles-height, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, wallxy {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 46, :column 7, :end-line 46, :end-column 13, :arglists (quote ([courtwh]))}, :name pong.fairydust/wallxy, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 13, :method-params ([courtwh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([courtwh]))}, wall {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([x y]))}, :name pong.fairydust/wall, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 11, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, wally {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 51, :column 7, :end-line 51, :end-column 12, :arglists (quote ([]))}, :name pong.fairydust/wally, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, paddles-color {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([state]))}, :name pong.fairydust/paddles-color, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, place-walls {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 62, :column 7, :end-line 62, :end-column 18, :arglists (quote ([state]))}, :name pong.fairydust/place-walls, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, append-n-walls {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 55, :column 7, :end-line 55, :end-column 21, :arglists (quote ([state n walls]))}, :name pong.fairydust/append-n-walls, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 21, :method-params ([state n walls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state n walls]))}, sprinkle {:protocol-inline nil, :meta {:file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :line 71, :column 7, :end-line 71, :end-column 15, :arglists (quote ([state]))}, :name pong.fairydust/sprinkle, :variadic false, :file "/Users/juanuys/Documents/quil/pong/src/pong/fairydust.cljs", :end-column 15, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :bot :color :else :w :hits :walls :paddle :h :walls-added :player :x}, :order [:paddle :player :bot :hits :h :else :color :x :y :w :walls-added :walls]}, :doc nil}